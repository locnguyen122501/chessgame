<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>